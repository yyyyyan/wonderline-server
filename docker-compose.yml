version: "3.7"
services:
  wonderline_app:
    container_name: wonderline_app
    build: .
    ports:
      - 8000:8000
    env_file:
      - docker.dev.env
    links:
      - cassandra:cassandra_host
      - minio:minio_host
      - postgres:postgres_host
    volumes:
      - ./DB_scripts:/app/DB_scripts
      - ./tests:/app/tests
    depends_on:
      - minio
      - cassandra
      - postgres
    networks:
      - wonderline-shared-net

  nginx:
    build: ./nginx
    container_name: nginx
    networks:
      - wonderline-shared-net
    ports:
      - 80:80
    depends_on:
      - wonderline_app
      - minio

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2022-03-05T06-32-39Z.fips
    networks:
      - wonderline-shared-net
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - /tmp/minio_data:/export
      - ./minio:/root/.minio
    environment:
      - MINIO_ROOT_USER=wonderline
      - MINIO_ROOT_PASSWORD=wonderline
      - MINIO_SERVER_URL=https://localhost:9000
    command: server --address ":9000" --console-address ":9001" /export

  cassandra:
    container_name: cassandra
    image: cassandra:3.11.6
    restart: always
    networks:
      - wonderline-shared-net
    ports:
      - 9042:9042
    volumes:
      - ./DB_scripts/cassandra-init.sh:/cassandra-init.sh
      - ./DB_scripts/init_cassandra_tables_with_text_id.cql:/docker-entrypoint-initdb.d/init_1_schema.cql
      - ./DB_scripts/init_cassandra_with_mock_data.cql:/docker-entrypoint-initdb.d/init_2_mock_data.cql
      - /tmp/cassandra_data:/var/lib/cassandra/data
    environment:
      - CASSANDRA_START_RPC=true
      - CASSANDRA_CLUSTER_NAME=MyCluster
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=datacenter
    command: "sh /cassandra-init.sh"


  postgres:
    container_name: postgres
    image: postgres:9.6.18
    restart: always
    networks:
      - wonderline-shared-net
    ports:
      - 5432:5432
    volumes:
      - ./DB_scripts/init_postgresql_tables.sql:/docker-entrypoint-initdb.d/init_1_schema.sql
      - ./DB_scripts/init_postgresql_with_mock_data.sql:/docker-entrypoint-initdb.d/init_2_mock_data.sql
      - /tmp/postgres_data:/var/lib/postgresql/data

    environment:
      - POSTGRES_DB=wonderline_postgres
      - POSTGRES_USER=wonderline_postgres
      - POSTGRES_PASSWORD=wonderline_postgres
      - POSTGRES_HOST_AUTH_METHOD=trust

networks:
  wonderline-shared-net:
    driver: "bridge"